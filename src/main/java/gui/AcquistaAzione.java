package GUI;

import Controller.Controller;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.*;
import java.util.ArrayList;

/**
 * The type Acquista azione.
 */
public class AcquistaAzione {
    /**
     * The Frame.
     */
    public JFrame frame;
    private JPanel panel1;
    private JTable listinoTable;
    private JButton acquistaButton;
    private String societa;
    private Double valoreAzione;

    /**
     * Instantiates a new Acquista azione.
     *
     * @param controller     the controller
     * @param frameChiamante the frame chiamante
     */
    public AcquistaAzione(Controller controller, JFrame frameChiamante) {
        frame = new JFrame("Acquista azione");
        frame.setContentPane(panel1);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();

        listinoTable.setModel(new DefaultTableModel(
                new Object[][]{
                },
                new String[]{
                        "Societa", "Valore Azione"
                }
        ));
        DefaultTableModel model = (DefaultTableModel) listinoTable.getModel();
        ArrayList listaNomiSocieta = controller.getNomiSocietaDaListino();
        ArrayList listaValoriAzione = controller.getValoriAzionedaListino();
        if (listaNomiSocieta != null && listaValoriAzione != null)
            for (int i = 0; i < listaNomiSocieta.size(); i++)
                model.addRow(new Object[]{listaNomiSocieta.get(i), listaValoriAzione.get(i)});

        listinoTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                int row = listinoTable.getSelectedRow();
                if (row >= 0) {
                    societa = (String) listinoTable.getValueAt(row, 0);
                    valoreAzione = Double.parseDouble(
                            listinoTable.getValueAt(row, 1).toString());
                }
            }
        });
        acquistaButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (societa != null) {
                    int quantita;
                    try {
                        quantita = Integer.parseInt(JOptionPane.showInputDialog("Inserisci la quantita' di azioni da acquistare"));
                    } catch (NumberFormatException ex) {
                        JOptionPane.showMessageDialog(frame, "Quantita' non valida");
                        return;
                    }
                    if (quantita > 0) {
                        controller.acquistaAzione(societa, valoreAzione, quantita);
                        JOptionPane.showMessageDialog(frame, "Azione acquistata con successo");
                        frame.setVisible(false);
                        frameChiamante.setVisible(true);
                        frame.dispose();
                    } else {
                        JOptionPane.showMessageDialog(frame, "Quantita' non valida");
                    }
                } else
                    JOptionPane.showMessageDialog(frame, "Selezionare una societa");
            }
        });
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        listinoTable = new JTable();
        panel1.add(listinoTable, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Seleziona una riga e poi premi il pulsante Acquista");
        panel1.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        acquistaButton = new JButton();
        acquistaButton.setText("Acquista");
        panel1.add(acquistaButton, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
